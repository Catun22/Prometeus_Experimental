"""pattern.py

–°–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã-—à–∞–±–ª–æ–Ω—ã, —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å—Ç–∞–≤–∏—Ç—Å—è –≤ —Ñ–∞–π–ª `.md.`
"""

from typing import Optional
import os
from datetime import date
from core.lib.prompts import Prompts


class __TemplateMd:  # –°–æ–∑–¥–∞–¥–∏–º –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
    def __init__(
        self, title: str = "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∏—Ç—É–ª—å–Ω–∏–∫–∞", emoticon: str = "üìù", suffix: str = ""
    ) -> None:  # –°—Ç–∞–≤–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –≤–≤–æ–¥–∞ –Ω–µ –±—É–¥–µ—Ç
        
        self.__title = title  # –ú–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ "–¥–æ–ø—É—Å—Ç–∏–º—ã–µ" —Å–∏–º–≤–æ–ª—ã
        self.__emoticon = emoticon
        self.__date = date.today()
        
        self.__file_name = self.__title.lower().replace(" ", "_") + suffix
        self.__path_to_file = ""
        self.__dir_path: Optional[str] = None

        self.__content = ""  # –ü—É—Å—Ç–æ–µ –ø–æ–ª–µ
        self._structure()  # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ (–≥–ª–∞–≤–Ω—ã–π)

    def _structure(self) -> None:
        """
        –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥, —Ö—Ä–∞–Ω—è—â–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É/–∫–∞—Ä–∫–∞—Å/—Å–∫–µ–ª–µ—Ç —à–∞–±–ª–æ–Ω–∞
        
        –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞-—à–∞–±–ª–æ–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞.

        –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
        ```
        class MyTemplate:
            def _structure(self) -> None:
                super()._structure()
        ```

        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
        """
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–º—ã —Å–æ —Å–º–∞–π–ª–∏–∫–æ–º –∏ –¥–∞—Ç–æ–π —Å–æ–∑–¥–∞–Ω–∏—è
        self.__content += f"# {self.__emoticon} {self.__title}\n\n"
        self.__content += f"#### –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {self.__date}\n\n"

    def _add_section(self, title: str, items: list[str]) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
        self.__content += f"## {title}\n\n"  # –¢–∏—Ç—É–ª—å–Ω–∏–∫ —Ä–∞–∑–¥–µ–ª–∞
        for item in items:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å "–ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞–º–∏"
              # –¢–æ —Å—Ç–∞–≤–∏–º "-", –ø—Ä–æ–±–µ–ª –∏ –∏–º—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
            self.__content += f"- {item}\n"
        self.__content += "\n"  # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ü–µ

    def _add_code_section(self, title: str, code: str) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª —Å –±–ª–æ–∫–æ–º –∫–æ–¥–∞"""
        self.__content += f"## {title}\n\n"  #  –¢–∏—Ç—É–ª—å–Ω–∏–∫, –∫–∞–∫ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –º–µ—Ç–æ–¥–µ
        self.__content += f"```python\n{code}\n```\n\n"  # –î–µ–ª–∞–µ–º –±–ª–æ–∫ —Å –∫–æ–¥–æ–º; python —á—Ç–æ–±—ã .md –∑–Ω–∞–ª —á—Ç–æ –∫–æ–¥ –Ω–∞ —ç—Ç–æ–º —è–∑—ã–∫–µ


    def __path(self, path: Optional[str] = None) -> None:  # –ó–∞–ø—É—Å–∫ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        """–°–æ–∑–¥–∞–µ—Ç –ø—É—Ç–∏"""
        if self.__path_to_file:  # –ø—É—Ç—å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ set_default_path
            return
        if path is None:  # –ï—Å–ª–∏ –ø—É—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω, —Ç–æ —Å–æ–∑–¥–∞–¥–∏—Ç—Å—è —Ä—è–¥–æ–º –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ:
            self.__path_to_file = self.get_file_name()
            self.__dir_path = os.getcwd()
        else: 
            # –ï—Å–ª–∏ –ø—É—Ç—å —É–∫–∞–∑–∞–Ω
            # –ï—Å–ª–∏ –ø—É—Ç—å –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ (—Ç–æ –µ—Å—Ç—å –≤–≤–µ–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, –∞ –Ω–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
            if path.endswith(".md"):
                self.__path_to_file = path  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω –ø—É—Ç–∏
                # –¢–æ–≥–¥–∞ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ (—Å —Ñ–∞–π–ª–æ–º) –±—É–¥–µ—Ç —Ç–∞–∫–∏–º:
                self.__dir_path = os.path.dirname(self.__path_to_file)
                if self.__dir_path:  # –ï—Å–ª–∏ –≤ __dir_path —á—Ç–æ-—Ç–æ –±—É–¥–µ—Ç
                    # –¢–æ —Å–æ–∑–¥–∞–¥–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏ (–µ—Å–ª–∏ –º—ã –≤–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –ø—É—Ç—å)
                    os.makedirs(self.__dir_path, exist_ok=True)

            else: 
                # –ï—Å–ª–∏ –º—ã –Ω–µ –ø–∏—Å–∞–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ (—Ç–æ –µ—Å—Ç—å –Ω–µ –ø–∏—Å–∞–ª–∏ –ø—É—Ç—å —Å —Ñ–∞–π–ª–æ–º)
                # –¢–æ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ –ø—É—Ç–∏
                os.makedirs(path, exist_ok=True)
                # –ò–º—è —Ñ–∞–π–ª–∞ –±—É–¥–µ—Ç —Ç–∞–∫–∏–º:
                self.__file_name = self.__title.lower().replace(' ', '_')
                # –ê –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ + –∏–º—è —Ñ–∞–π–ª–∞
                self.__path_to_file = os.path.join(path, self.get_file_name())  
                self.__dir_path = path

    def __save(self, path: str) -> None:
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Ñ–∞–π–ª"""
        with open(path, "w", encoding="utf-8") as f:
            f.write(self.__content)
        print(Prompts.file_saved, os.path.abspath(path))

    def set_default_path(self, path: str) -> None:
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—É—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª (.md) ‚Äî –±–µ—Ä—ë–º –µ–≥–æ.
        –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –ø–∞–ø–∫–∞ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç—É–¥–∞ —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–µ–º—ã.
        """
        if path.endswith(".md"):
            os.makedirs(os.path.dirname(path), exist_ok=True)
            self.__path_to_file = path
            self.__dir_path = os.path.dirname(path)
        else:
            os.makedirs(path, exist_ok=True)
            self.__path_to_file = os.path.join(path, self.get_file_name())
            self.__dir_path = path

    def get_path(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É"""
        return self.__path_to_file
    
    def get_dir_path(self) -> Optional[str]:
        return os.path.abspath(self.__dir_path) if self.__dir_path else None
    
    def get_file_name(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞"""
        if self.__file_name.endswith(".md"):
            return str(self.__file_name)
        return f"{self.__file_name}.md"

    def start(self, path: Optional[str] = None) -> None:
        """–ó–∞–ø—É—Å–∫"""
        self.__path(path)
        # –ü–æ—Å–ª–µ –≤—Å–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        self.__save(self.get_path())


class Topic(__TemplateMd):
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ–º –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é (python)"""

    def __init__(self, title: str = "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã", emoticon: str = "üêç") -> None:
        super().__init__(title, emoticon, suffix="_topic")

    def _structure(self) -> None:
        super()._structure()
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã. –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ–º
        self._add_section(
            "üò∏ –û–±—â–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ",
            [
                "–ß—Ç–æ —ç—Ç–æ?",
                "–î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?",
                "–ì–¥–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è?",
                "–ü–æ—á–µ–º—É –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å?",
            ],
        )

        self._add_section(
            "üò∫ –ü–æ–Ω—è—Ç–∏—è –∏ —Ç–µ—Ä–º–∏–Ω—ã", ["–¢–µ—Ä–º–∏–Ω 1 ‚Äî –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "–¢–µ—Ä–º–∏–Ω 2 ‚Äî –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ"]
        )

        # –ë–ª–æ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –ø–æ —à–∞–±–ª–æ–Ω—É
        self._add_code_section(
            "üòº –°—Ç—Ä—É–∫—Ç—É—Ä–∞ & –°–∏–Ω—Ç–∞–∫—Å–∏—Å",
            '# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞\nwith open(\'file.txt\', "w", encoding="utf-8") as f:\n    data = f.read()',
        )

        self._add_section(
            "üòæ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
            ["–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä", "–°–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä"],
        )

        self._add_section(
            "üêØ –ü—Ä–∞–∫—Ç–∏–∫–∞", ["–ß—Ç–æ —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä—É–∫–∞–º–∏, —á—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å?"]
        )

        self._add_section(
            "üò° –ü–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ –∏ –æ—à–∏–±–∫–∏",
            [
                "–ß—Ç–æ —á–∞—Å—Ç–æ –ø—É—Ç–∞–µ—Ç—Å—è?",
                "–ì–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —á–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏?",
                "–ß—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å?",
            ],
        )

        self._add_section(
            "üßê –°—Ä–∞–≤–Ω–µ–Ω–∏–µ & –∞–Ω–∞–ª–æ–≥–∏", ["try/finally vs with", "–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã vs –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã"]
        )

        self._add_section(
            "üò∂ –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–º—ã",
            ["–£–∫–∞–∑–∞—Ç—å —Å–º–µ–∂–Ω—ã–µ —Ç–µ–º—ã: –∫–ª–∞—Å—Å—ã, –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã, —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞"],
        )

        self._add_section(
            "ü§ì –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
            [
                "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Python",
                "PEP 343 ‚Äî The 'with' Statement",
                "–í–∏–¥–µ–æ, —Å—Ç–∞—Ç—å–∏, –∫–æ–Ω—Å–ø–µ–∫—Ç—ã",
            ],
        )

        self._add_section("üò§ –ò—Ç–æ–≥–∏", ["–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ", "3‚Äì5 –≥–ª–∞–≤–Ω—ã—Ö –≤—ã–≤–æ–¥–æ–≤"])


class Library(__TemplateMd):
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é (python)"""

    def __init__(self, title: str = "–ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏", emoticon: str = "üêç") -> None:
        super().__init__(title, emoticon, suffix="_library")

        self._add_section(
            "üò∏ –ì–õ–ê–í–ê 1. –û–ë–©–ï–ï –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–ï –ë–ò–ë–ò–û–¢–ï–ö–ò",
            [
                "**–û–ø–∏—Å–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:**",
                "**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ:**"
            ]
        )
        
        self._add_section(
            "üò∫ –ì–õ–ê–í–ê 2. –£–°–¢–ê–ù–û–í–ö–ê –ò –ù–ê–°–¢–†–û–ô–ö–ê",
            [
                "**–£—Å—Ç–∞–Ω–æ–≤–∫–∞:**",
                "**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:**",
                "**–°—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é:**"
            ]
        )
        
        self._add_section(
            "üòº –ì–õ–ê–í–ê 3. –ë–ê–ó–û–í–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ë–ò–ë–õ–ò–û–¢–ï–ö–ò",
            [
                "**–ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä:**",
                "**–ö–ª—é—á–µ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã, –∫–ª–∞—Å—Å—ã, —Ñ—É–Ω–∫—Ü–∏–∏:**",
                "**–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏ –∞—Ç—Ä–∏–±—É—Ç—ã:**"
            ]
        )
        
        self._add_section(
            "üòæ –ì–õ–ê–í–ê 4. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ë–ò–ë–ò–û–¢–ï–ö–ò",
            [
                "**–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä:**",
                "**–°–≤–æ—ë –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**"
            ]
        )
        
        self._add_section(
            "üòΩ –ì–õ–ê–í–ê 5. –†–ê–ó–ë–û–† –°–õ–û–ñ–ù–´–• –ú–û–ú–ï–ù–¢–û–í",
            [
                "**–û—à–∏–±–∫–∏:**",
                "**–õ–æ–≥–∏–∫–∞ –∏–∑–Ω—É—Ç—Ä–∏:**",
                "**–ö–∞–∫ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è:**"
            ]
        )
        
        self._add_section(
            "üòø –ì–õ–ê–í–ê 6. –ü–†–û–ï–ö–¢ –ò –ü–†–ê–ö–¢–ò–ö–ê",
            [
                "**–°–≤–æ–π –ø—Ä–æ–µ–∫—Ç:**",
                "**–£–ø–∞–∫–æ–≤–∫–∞ –≤ —à–∞–±–ª–æ–Ω:**"
            ]
        )
        
        self._add_section(
            "üôÄ –ì–õ–ê–í–ê 7. –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ò –ó–ê–ö–†–ï–ü–õ–ï–ù–ò–ï",
            [
                "**–û–±–∑–æ—Ä –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:**",
                "**–ó–∞–∫–ª–∞–¥–∫–∏ —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏:**",
                "**–õ–∏—á–Ω—ã–π –∫–æ–Ω—Å–ø–µ–∫—Ç:**"
            ]
        )
        
        self._add_section(
            "üòª –ì–õ–ê–í–ê 8. –ò–¢–û–ì",
            [
                "**–ü–æ–Ω—è—Ç–Ω–æ:**",
                "**–ù–µ –ø–æ–Ω—è—Ç–Ω–æ:**",
                "**–ß—Ç–æ –¥–∞–ª—å—à–µ:**"
            ]
        )
